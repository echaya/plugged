*snacks-util.txt*                                                  snacks.nvim

==============================================================================
Table of Contents                              *snacks-util-table-of-contents*

1. Types                                                   |snacks-util-types|
2. Module                                                 |snacks-util-module|
  - Snacks.util.bo()                     |snacks-util-module-snacks.util.bo()|
  - Snacks.util.color()               |snacks-util-module-snacks.util.color()|
  - Snacks.util.set_hl()             |snacks-util-module-snacks.util.set_hl()|
  - Snacks.util.wo()                     |snacks-util-module-snacks.util.wo()|

==============================================================================
1. Types                                                   *snacks-util-types*

>lua
    ---@alias snacks.util.hl table<string, string|vim.api.keyset.highlight>
<


==============================================================================
2. Module                                                 *snacks-util-module*


`Snacks.util.bo()`                                          *Snacks.util.bo()*

>lua
    ---@param buf number
    ---@param bo vim.bo
    Snacks.util.bo(buf, bo)
<


`Snacks.util.color()`                                    *Snacks.util.color()*

>lua
    ---@param group string
    ---@param prop? string
    Snacks.util.color(group, prop)
<


`Snacks.util.set_hl()`                                  *Snacks.util.set_hl()*

Ensures the hl groups are always set, even after a colorscheme change.

>lua
    ---@param groups snacks.util.hl
    ---@param opts? { prefix?:string, default?:boolean, managed?:boolean }
    Snacks.util.set_hl(groups, opts)
<


`Snacks.util.wo()`                                          *Snacks.util.wo()*

>lua
    ---@param win number
    ---@param wo vim.wo
    Snacks.util.wo(win, wo)
<

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
